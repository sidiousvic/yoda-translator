{"version":3,"sources":["components/Input.jsx","redux/actions.js","redux/containers/Input.js","components/Output.jsx","redux/containers/Output.js","components/Button.jsx","redux/containers/Button.js","components/Translator.jsx","redux/containers/Translator.js","components/App.jsx","redux/reducer.js","index.js"],"names":["Input","className","onChange","e","props","inputText","target","value","React","Component","yodaTranslateAsync","text","dispatch","fetch","method","headers","body","then","response","json","data","contents","translated","replace","yodaTranslate","console","log","catch","err","type","connect","state","input","output","res","Output","this","readOnly","Button","onClick","Translator","id","App","defaultState","reducer","action","store","compose","applyMiddleware","thunk","createStore","createStoreWithMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a710d02e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/InputOutput.css\";\n\nclass Input extends React.Component {\n  render() {\n    return (\n      <div className=\"Input\">\n        <textarea\n          onChange={e => {\n            this.props.inputText(e.target.value);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","export const yodaTranslateAsync = text => {\n  return function(dispatch) {\n    return (() => {\n      fetch(`https://yodish.p.rapidapi.com/yoda.json?text=${text}`, {\n        method: \"POST\",\n        headers: {\n          \"x-rapidapi-host\": \"yodish.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"8036578aaemsh08b2547a8d8f6c8p144d3bjsna14fef356bb7\",\n          \"content-type\": \"application/x-www-form-urlencoded\"\n        },\n        body: {}\n      })\n        .then(response => {\n          response.json().then(data => {\n            const text = data.contents.translated.replace(\"  \", \" \");\n            dispatch(yodaTranslate(text));\n          });\n        })\n        .then(() => {\n          console.log(\"Success.\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    })();\n  };\n};\n\nconst yodaTranslate = text => {\n  return {\n    type: \"TRANSLATE\",\n    text\n  };\n};\n\nexport const inputText = text => {\n  return {\n    type: \"INPUT_TEXT\",\n    text\n  };\n};\n","import { connect } from \"react-redux\";\nimport Input from \"../../components/Input\";\nimport { yodaTranslateAsync, inputText } from \"../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    yodaTranslate: text => {\n      const res = yodaTranslateAsync(text);\n      dispatch(res);\n    },\n    inputText: text => {\n      const res = inputText(text);\n      dispatch(res);\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    input: state.input,\n    output: state.output\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Input);\n","import React from \"react\";\nimport \"../css/InputOutput.css\";\n\nclass Output extends React.Component {\n  render() {\n    return (\n      <div className=\"Output\">\n        <textarea\n          value={\n            this.props.output === \"Null\"\n              ? \"Empty, above cannot be.\"\n              : this.props.output\n          }\n          readOnly\n        />\n      </div>\n    );\n  }\n}\n\nexport default Output;\n","import { connect } from \"react-redux\";\nimport Output from \"../../components/Output\";\nimport { yodaTranslateAsync, inputText } from \"../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    yodaTranslate: text => {\n      const res = yodaTranslateAsync(text);\n      dispatch(res);\n    },\n    inputText: text => {\n      const res = inputText(text);\n      dispatch(res);\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    input: state.input,\n    output: state.output\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Output);\n","import React from \"react\";\nimport \"../css/Button.css\";\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <div className=\"Button\">\n        <input\n          type=\"button\"\n          onClick={e => {\n            this.props.yodaTranslate(this.props.input);\n            console.log(this.props);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Button;\n","import { connect } from \"react-redux\";\nimport Button from \"../../components/Button\";\nimport { yodaTranslateAsync, inputText } from \"../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    yodaTranslate: text => {\n      const res = yodaTranslateAsync(text);\n      dispatch(res);\n    },\n    inputText: text => {\n      const res = inputText(text);\n      dispatch(res);\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    input: state.input,\n    output: state.output\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);\n","import React from \"react\";\nimport \"../css/Translator.css\";\nimport Input from \"../redux/containers/Input\";\nimport Output from \"../redux/containers/Output\";\nimport Button from \"../redux/containers/Button\";\n\nclass Translator extends React.Component {\n  componentDidUpdate() {\n    if (this.props.output) console.log(this.props.output);\n  }\n\n  render() {\n    return (\n      <div className=\"translator-wrapper\">\n        <h1>Like Yoda, Say It</h1>\n        <div className=\"translator\">\n          <Input id=\"input\" />\n          <Button\n            onClick={e => {\n              this.props.yodaTranslate(\"I want a burger\");\n            }}\n          />\n          <Output id=\"output\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Translator;\n","import { connect } from \"react-redux\";\nimport Translator from \"../../components/Translator\";\nimport { yodaTranslateAsync, inputText } from \"../actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    yodaTranslate: text => {\n      const res = yodaTranslateAsync(text);\n      dispatch(res);\n    },\n    inputText: text => {\n      const res = inputText(text);\n      dispatch(res);\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    input: state.input,\n    output: state.output\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Translator);\n","import React from \"react\";\nimport \"../css/App.css\";\nimport Translator from \"../redux/containers/Translator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Translator />\n    </div>\n  );\n}\n\nexport default App;\n","const defaultState = {\n  input: null,\n  output: \"Something, write above.\"\n};\n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"TRANSLATE\":\n      return {\n        ...state,\n        output: action.text\n      };\n    case \"INPUT_TEXT\":\n      return {\n        ...state,\n        input: action.text\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport reducer from \"./redux/reducer\";\n\nconst createStoreWithMiddleware = compose(applyMiddleware(thunk))(createStore);\n\nconst store = createStoreWithMiddleware(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}